<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.panda.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.panda.model.User" >
    <id column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="TINYINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="register_time" property="registerTime" jdbcType="DATE" />
    <result column="category_id" property="categoryId" jdbcType="VARCHAR" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="last_visit" property="lastVisit" jdbcType="DATE" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="balance" property="balance" jdbcType="REAL" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, user_name, sex, password, age, phone, email, register_time, category_id, 
    user_type, status, last_visit, create_time, balance, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from [User]
    where user_id = #{userId,jdbcType=VARCHAR} and is_delete = 0
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update [User]
    set is_delete = 1
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.panda.model.User" >
    insert into [User] (user_id, user_name, sex, 
      password, age, phone, 
      email, register_time, category_id, 
      user_type, status, last_visit, 
      create_time, balance, is_delete
      )
    values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{registerTime,jdbcType=DATE}, #{categoryId,jdbcType=VARCHAR}, 
      #{userType,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{lastVisit,jdbcType=DATE}, 
      #{createTime,jdbcType=DATE}, #{balance,jdbcType=REAL}, #{isDelete,jdbcType=VARCHAR}
      )
     
  </insert>
  <insert id="insertSelective" parameterType="com.panda.model.User" >
    insert into [User]
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="registerTime != null" >
        register_time,
      </if>
      <if test="categoryId != null" >
        category_id,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="lastVisit != null" >
        last_visit,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        #{registerTime,jdbcType=DATE},
      </if>
      <if test="categoryId != null" >
        #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="lastVisit != null" >
        #{lastVisit,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=REAL},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.panda.model.User" >
    update [User]
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="registerTime != null" >
        register_time = #{registerTime,jdbcType=DATE},
      </if>
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=VARCHAR},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="lastVisit != null" >
        last_visit = #{lastVisit,jdbcType=DATE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=REAL},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.panda.model.User" >
    update [User]
    set user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      register_time = #{registerTime,jdbcType=DATE},
      category_id = #{categoryId,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      last_visit = #{lastVisit,jdbcType=DATE},
      create_time = #{createTime,jdbcType=DATE},
      balance = #{balance,jdbcType=REAL},
      is_delete = #{isDelete,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  <select id="getAllUser" resultMap="BaseResultMap">
  	  select 
  	  user_id, user_name, sex, password, age, phone, email, register_time, category_id, 
      type_name as user_type, status, last_visit, create_time, balance, [user].is_delete as is_delete
  	  from 
  	  [user] left join 
  	  usertype on [user].user_type = usertype.[type_id]
  	  where 
  	  [user].is_delete = 0
  </select>
  
  <update id="updateUser">
  update [user]
  <set>
	  <if test="userName!=null">
	  user_name=#{userName,jdbcType=VARCHAR},
	  </if>
	  <if test="userType!=null">
	  user_type=#{userType,jdbcType=VARCHAR},
	  </if>
  </set>
  where user_id = #{userId,jdbcType=VARCHAR} and is_delete = 0
  
  </update>
  
  <update id="deposit">
  update
  [user]
  set balance +=  #{money}
  where user_id = #{userId,jdbcType=VARCHAR}
  and is_delete = 0
  </update>
  
  <update id="updateBalance">
   update 
   [user]
   set 
   balance = balance -#{fine}
   where 
   user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>