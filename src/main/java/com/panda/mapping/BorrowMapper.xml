<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.panda.mapper.BorrowMapper" >
  <resultMap id="BaseResultMap" type="com.panda.model.Borrow" >
    <id column="borrow_id" property="borrowId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="book_id" property="bookId" jdbcType="VARCHAR" />
    <result column="borrow_date" property="borrowDate" jdbcType="TIMESTAMP" />
    <result column="return_date" property="returnDate" jdbcType="TIMESTAMP" />
    <result column="term" property="term" jdbcType="SMALLINT" />
    <result column="fine" property="fine" jdbcType="REAL" />
    <result column="is_delete" property="isDelete" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.panda.model.BorrowWithBookName" id="BigResultMap" extends="BaseResultMap">
     <result column="book_name" property="BookName" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.panda.model.ShortBooks" id="ShortResultMap">
  <id column="rank" property="rank" jdbcType="VARCHAR"/>
   <result column="book_name" property="bookName" jdbcType="VARCHAR" />
   <result column="term" property="term" jdbcType="SMALLINT" />
    <result column="borrow_date" property="borrowDate" jdbcType="TIMESTAMP" />
    <result column="press" property="press" jdbcType="VARCHAR" ></result>
    <result column="borrow_id" property="borrowId" jdbcType="VARCHAR"   />
  </resultMap>
  <sql id="Base_Column_List" >
    borrow_id, user_id, book_id, borrow_date, return_date, term, fine, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from Borrow
    where borrow_id = #{borrowId,jdbcType=VARCHAR}
    and is_delete = 0
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from Borrow
    where borrow_id = #{borrowId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.panda.model.Borrow" >
    insert into Borrow (borrow_id, user_id, book_id, 
      borrow_date, return_date, term, 
      fine, is_delete)
    values (#{borrowId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{bookId,jdbcType=VARCHAR}, 
      #{borrowDate,jdbcType=TIMESTAMP}, #{returnDate,jdbcType=TIMESTAMP}, #{term,jdbcType=SMALLINT}, 
      #{fine,jdbcType=REAL}, #{isDelete,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.panda.model.Borrow" >
    insert into Borrow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        borrow_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="borrowDate != null" >
        borrow_date,
      </if>
      <if test="returnDate != null" >
        return_date,
      </if>
      <if test="term != null" >
        term,
      </if>
      <if test="fine != null" >
        fine,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="borrowId != null" >
        #{borrowId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null" >
        #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDate != null" >
        #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="term != null" >
        #{term,jdbcType=SMALLINT},
      </if>
      <if test="fine != null" >
        #{fine,jdbcType=REAL},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.panda.model.Borrow" >
    update Borrow
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="borrowDate != null" >
        borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      </if>
      <if test="returnDate != null" >
        return_date = #{returnDate,jdbcType=TIMESTAMP},
      </if>
      <if test="term != null" >
        term = #{term,jdbcType=SMALLINT},
      </if>
      <if test="fine != null" >
        fine = #{fine,jdbcType=REAL},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=VARCHAR},
      </if>
    </set>
    where borrow_id = #{borrowId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.panda.model.Borrow" >
    update Borrow
    set user_id = #{userId,jdbcType=VARCHAR},
      book_id = #{bookId,jdbcType=VARCHAR},
      borrow_date = #{borrowDate,jdbcType=TIMESTAMP},
      return_date = #{returnDate,jdbcType=TIMESTAMP},
      term = #{term,jdbcType=SMALLINT},
      fine = #{fine,jdbcType=REAL},
      is_delete = #{isDelete,jdbcType=VARCHAR}
    where borrow_id = #{borrowId,jdbcType=VARCHAR}
  </update>
  
  <select id="getAllBorrow" resultMap="BigResultMap">
  select     
  borrow_id, user_id, borrow.book_id as book_id, borrow_date, return_date, term, fine,
  book.book_name as book_name
  from 
  borrow 
  left join
  books
  on 
  borrow.book_id = books.rank
  left join
  book
  on
  books.book_id = book.book_id
  where borrow.is_delete = 0  
  </select>
  
   <select id="getAllBorrowByBookName" resultMap="BigResultMap">
  select     
  borrow_id, user_id, borrow.book_id as book_id, borrow_date, return_date, term, fine,
  book.book_name as book_name
  from 
  borrow 
  left join
  books
  on 
  borrow.book_id = books.rank
  left join
  book
  on
  books.book_id = book.book_id
  where borrow.is_delete = 0  
  and book_name like #{tag}
  </select>
  
  <select id="getShortBooks" resultMap="ShortResultMap">
  select book_name,borrow.book_id as rank,borrow.borrow_date as borrow_date,term,press,borrow_id from borrow
	left join 
	books
	on 
	rank =borrow.book_id
	left join 
	book on
	books.book_id=book.book_id
	where user_id =#{userId,jdbcType=VARCHAR} and borrow.is_delete = 0  and return_date is null
  </select>
  
  <update id="updateBorrow">
  update 
  borrow
  set
  return_date=#{returnDate,jdbcType=VARCHAR},
  fine = #{fine}
  where 
  borrow_id = #{borrowId,jdbcType=VARCHAR}
  </update>
  
  <select id="getBorrowedNum" resultType="java.lang.Integer">
  select 
  count(borrow_id)
  from
  borrow 
  where [user_id]=#{userId,jdbcType=VARCHAR} 
  and return_date is null
  </select>
</mapper>